안녕하세요. AI 304팀에 발표를 맡은 박성호입니다.
팀원소개는 ~~~ 구성되어 있습니다.
이번 2주차 특화기간동안 저희팀이 학습한 전반적인 내용과 앞으로 서비스할 계획 방향성에 대해 말씀드리겠습니다.


먼저, 이미지 캡셔닝 기능 구현에 대해 각자 스스로 학습하면서 정리를 하고 공유를 하는 식으로 진행을 하였고
이미지 CNN 부분과 텍스트 RNN 부분, 두 그룹으로 나누어 명세서 기반으로 코딩을 해보았습니다.

CNN 이미지 처리에 대해서는 그림설명과 코드관련 흐름에 대해 어느정도 프로세싱되는 
과정을 볼 수 있어서 좋았지만
RNN 텍스트 처리에 대해서는 수식과 알고리즘에 대한 정보들이 많아 접근에 대한 방법이 어려웠습니다.

(스크롤 내리고)


일단 저희는 AI 명세서 기반으로 코딩을 하였고 구현한 내용에 대해 설명드리려고 합니다.
데이터 전처리 과정을 크게 이미지와 텍스트 과정, 두가지 과정으로 나누어서 구현하였습니다.
이미지 전처리는 리사이징, 정규화, 어그멘테이션 과정으로 진행하였고
텍스트 전처리는 토크나이저를 이용해 캡션을 토큰화 하여 진행하였습니다.


(스크롤 내리고)

이미지 전처리 소스를 보시면 이미지 경로를 config에 저장해서 불러오는 형식으로 사용했고 
전체 이미지를 opencv 라이브러리를 이용해 리사이징 작업울 하였습니다.
예제에 나와있는 것처럼 300x300 크기로 맞추고 이를 정규화하여 만든다음 딕셔너리로 
리턴하는 구조로 구현하였습니다.


(스크롤 내리고)

그 다음 텍스트 데이터를 토큰화 하는 작업을 하였습니다.

csv 파일을 읽어들이면서 start와 end 캡션을 앞뒤로 추가해 다시 캡션에 저장하였고 
텐서플로우 케라스 토크나이저 함수를 이용해 토큰사이즈를 입력을 받아 처리한 다음 
이를 패딩하는 작업을 추가해서 결과를
리턴하는 구조로 구현하고 동시에 토크나이저 파일을 저장하도록 구현하였습니다.

토크나이저 파일을 로드할 수 있는 함수를 따로 정의도 해보았고

데이터셋으로 변환하는 과정을 하면서 저희는 일단 전체갯수의 30%를 뽑아 추출한다음  
이를 어그멘테이션을  돌려 반환하였습니다.

트레인 파일에서는
프리프로세싱 파일에서 구현한 부분을 써서 이미지 전처리, 토크나이저, 
그리고 이미지 경로와 토큰화 된 캡션을 쌍으로 묶는
데이터로 관리하였고 이에 어그멘테이션까지 하는 부분까지 구현하였습니다.


다음 저희의 AI 서비스 기획 방향으로는 닮은꼴 찾기, 내 별명찾기 처럼 엔터테인먼트 요소로 
방향을 잡았습니다.
동물, 연예인, 캐릭터 중 나와 닮은 꼴을 찾아주는 서비스로 CNN 기술 사용될 것이라 생각하고 있습니다.


이상으로 4조 발표를 마치겠습니다.
감사합니다.